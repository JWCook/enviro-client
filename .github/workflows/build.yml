name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  LATEST_PY_VERSION: '3.10'
  COVERAGE_ARGS: '--cov --cov-report=term --cov-report=html'

jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.9, '3.10']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1.2
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true

      # Cache packages per python version, and reuse until lockfile changes
      - name: Cache python packages
        id: cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install -v

      # Run tests with coverage report
      # - name: Run tests
      #   run: |
      #     source $VENV
      #     pytest test ${{ env.COVERAGE_ARGS }}

      # Latest python version: send coverage report to codecov
      # - name: "Upload coverage report to Codecov"
      #   if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
      #   uses: codecov/codecov-action@v2


  # Run code analysis checks
  # analyze:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.LATEST_PY_VERSION }}
  #     - name: Run style checks and linting via pre-commit hooks
  #       uses: pre-commit/action@v2.0.3
